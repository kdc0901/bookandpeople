<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>도서 관리 - Book & People</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- 캐시 무효화를 위한 메타 태그 추가 -->
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
    <meta http-equiv="Pragma" content="no-cache">
    <meta http-equiv="Expires" content="0">
    <style>
    .book-image-container {
        position: relative;
        width: 100%;
        padding-top: 130%;
        overflow: hidden;
        background-color: #f5f5f5;
        border-radius: 8px;
    }

    .book-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-upload-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
        opacity: 0;
        transition: opacity 0.3s ease;
        cursor: pointer;
    }

    .image-upload-overlay i {
        font-size: 24px;
        margin-bottom: 8px;
    }

    .book-image-container:hover .image-upload-overlay {
        opacity: 1;
    }

    .upload-progress {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
    }

    .progress-text {
        font-size: 16px;
        font-weight: bold;
    }

    /* 새로 추가되는 그리드 스타일 */
    .admin-container {
        padding: 20px;
        max-width: 1600px;
        margin: 0 auto;
    }

    .books {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        gap: 16px;
        padding: 20px 0;
    }

    .book {
        background: #fff;
        border-radius: 8px;
        padding: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: transform 0.2s ease;
    }

    .book:hover {
        transform: translateY(-5px);
    }

    .book-info-display {
        margin-top: 8px;
    }

    .book-title {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 4px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        line-height: 1.3;
    }

    .book-author {
        font-size: 12px;
        color: #666;
        margin-bottom: 2px;
    }

    .book-price {
        font-size: 12px;
        color: #e74c3c;
        font-weight: bold;
    }

    /* 반응형 디자인 */
    @media (max-width: 1600px) {
        .books {
            grid-template-columns: repeat(6, 1fr);
        }
    }

    @media (max-width: 1200px) {
        .books {
            grid-template-columns: repeat(4, 1fr);
        }
    }

    @media (max-width: 768px) {
        .books {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @media (max-width: 480px) {
        .books {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    .admin-header {
        padding: 20px;
        margin-bottom: 20px;
        background-color: #fff;
        border-bottom: 1px solid #eee;
    }

    .image-upload-container {
        text-align: center;
    }

    .book-image-preview {
        width: 100%;
        height: 300px;
        border: 2px dashed #ddd;
        border-radius: 8px;
        overflow: hidden;
        margin-bottom: 10px;
    }

    .book-image-preview img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    #addBookModal .modal-lg {
        max-width: 800px;
    }

    .input-group-text {
        background-color: #f8f9fa;
    }

    /* 모달 스타일 수정 */
    .modal {
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-backdrop {
        display: none;
    }

    .modal-dialog {
        margin: 1.75rem auto;
        max-width: 800px;
    }

    .modal-content {
        position: relative;
        background-color: #fff;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3rem;
        box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
    }

    .btn-close {
        position: absolute;
        right: 1rem;
        top: 1rem;
        z-index: 1;
        padding: 1rem;
        opacity: 1;
        background: transparent;
    }

    .btn-close:hover {
        opacity: 0.75;
    }

    .modal-header {
        padding: 1.5rem;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        padding: 1rem 1.5rem;
        border-top: 1px solid #dee2e6;
    }

    /* 테이블 스타일 추가 */
    .books-table {
        width: 100%;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        margin-top: 20px;
    }

    .books-table th,
    .books-table td {
        padding: 1rem;
        vertical-align: middle;
    }

    .books-table thead th {
        background-color: #f8f9fa;
        border-bottom: 2px solid #dee2e6;
        font-weight: 600;
        text-align: left;
    }

    .books-table tbody tr {
        border-bottom: 1px solid #dee2e6;
        transition: background-color 0.2s ease;
    }

    .books-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .book-thumbnail {
        width: 60px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
    }

    .book-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .book-actions {
        display: flex;
        gap: 0.5rem;
    }

    .btn-icon {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .book-title-cell {
        font-weight: 500;
        color: #333;
    }

    .book-author-cell {
        color: #666;
    }

    .book-price-cell {
        font-weight: 500;
        color: #e74c3c;
    }
    </style>
</head>
<body>
    <!-- 헤더 -->
    <header class="main-header">
        <div class="header-content">
            <a href="/" class="logo-link">
                <h1>Book & People</h1>
            </a>
            
            <% if (user) { %>
                <div class="user-menu">
                    <div class="user-info">
                        <span class="username"><%= user.username %></span>
                        <div class="dropdown">
                            <button type="button" class="dropdown-btn">
                                <i class="fas fa-chevron-down"></i>
                            </button>
                            <div class="dropdown-content">
                                <% if (user.isAdmin) { %>
                                    <a href="/admin/books" class="dropdown-item">
                                        <i class="fas fa-cog"></i>
                                        <span>관리자 페이지</span>
                                    </a>
                                <% } %>
                                <button type="button" class="dropdown-item logout-btn">
                                    <i class="fas fa-sign-out-alt"></i>
                                    <span>로그아웃</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        </div>
    </header>

    <!-- 메인 네비게이션 -->
    <nav class="main-nav">
        <div class="nav-content">
            <ul>
                <li><a href="/"><i class="fas fa-home"></i>홈</a></li>
                <li><a href="/admin/books" class="active"><i class="fas fa-book"></i>도서 관리</a></li>
                <li><a href="/admin/users"><i class="fas fa-users"></i>회원 관리</a></li>
                <li><a href="/admin/orders"><i class="fas fa-shopping-cart"></i>주문 관리</a></li>
                <li><a href="/admin/stats"><i class="fas fa-chart-bar"></i>통계</a></li>
            </ul>
        </div>
    </nav>

    <div class="admin-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>도서 관리</h2>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addBookModal">
                <i class="fas fa-plus me-1"></i> 도서 추가
            </button>
        </div>

        <div class="table-responsive">
            <table class="books-table">
                <thead>
                    <tr>
                        <th style="width: 100px">이미지</th>
                        <th>도서명</th>
                        <th>저자</th>
                        <th>출판일</th>
                        <th>가격</th>
                        <th>종류</th>
                        <th>카테고리</th>
                        <th style="width: 100px">관리</th>
                    </tr>
                </thead>
                <tbody>
                    <% books.forEach(function(book) { %>
                        <tr data-id="<%= book._id %>">
                            <td>
                                <div class="book-image-container" style="width: 60px; height: 80px; padding: 0;">
                                    <img src="<%= book.imageUrl || '/images/placeholder.png' %>" 
                                         alt="<%= book.title %>" 
                                         class="book-thumbnail">
                                    <div class="image-upload-overlay">
                                        <i class="fas fa-upload"></i>
                                    </div>
                                </div>
                            </td>
                            <td class="book-title-cell"><%= book.title %></td>
                            <td class="book-author-cell"><%= book.author %></td>
                            <td><%= new Date(book.publishedAt).toLocaleDateString('ko-KR') %></td>
                            <td class="book-price-cell"><%= book.price.toLocaleString() %>원</td>
                            <td>
                                <% if (book.type === 'new') { %>
                                    <span class="badge bg-success">새 책</span>
                                <% } else if (book.type === 'used') { %>
                                    <span class="badge bg-warning">중고</span>
                                <% } else { %>
                                    <span class="badge bg-info">전자책</span>
                                <% } %>
                            </td>
                            <td>
                                <% if (book.category === 'pick') { %>
                                    <span class="badge bg-primary">오늘의 PICK</span>
                                <% } else { %>
                                    <span class="badge bg-secondary">지금, 이 책</span>
                                <% } %>
                            </td>
                            <td>
                                <div class="book-actions">
                                    <button type="button" class="btn btn-sm btn-outline-primary btn-icon btn-edit">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger btn-icon btn-delete">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- 수정 모달 -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">도서 정보 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <div class="mb-3">
                            <label for="editTitle" class="form-label">제목</label>
                            <input type="text" class="form-control" id="editTitle" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="editAuthor" class="form-label">저자</label>
                            <input type="text" class="form-control" id="editAuthor" name="author" required>
                        </div>
                        <div class="mb-3">
                            <label for="editPublishedAt" class="form-label">출판일</label>
                            <input type="date" class="form-control" id="editPublishedAt" name="publishedAt" required>
                        </div>
                        <div class="mb-3">
                            <label for="editPrice" class="form-label">가격</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="editPrice" name="price" required min="0">
                                <span class="input-group-text">원</span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="editType" class="form-label">종류</label>
                            <select class="form-select" id="editType" name="type" required>
                                <option value="new">새 책</option>
                                <option value="used">중고</option>
                                <option value="ebook">전자책</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="editCategory" class="form-label">카테고리</label>
                            <select class="form-select" id="editCategory" name="category" required>
                                <option value="pick">오늘의 PICK</option>
                                <option value="current">지금, 이 책</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" id="editSubmit">수정</button>
                </div>
            </div>
        </div>
    </div>

    <!-- 도서 추가 모달 -->
    <div class="modal fade" id="addBookModal" tabindex="-1" aria-labelledby="addBookModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addBookModalLabel">도서 추가</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addBookForm" enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="image-upload-container">
                                    <div class="book-image-preview">
                                        <img id="bookImagePreview" src="/images/placeholder.png" alt="도서 이미지 미리보기">
                                    </div>
                                    <div class="mt-2">
                                        <label for="bookImage" class="form-label">도서 이미지</label>
                                        <input type="file" class="form-control" id="bookImage" name="image" accept="image/*" required>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label for="bookTitle" class="form-label">도서명</label>
                                    <input type="text" class="form-control" id="bookTitle" name="title" required>
                                </div>
                                <div class="mb-3">
                                    <label for="bookAuthor" class="form-label">저자</label>
                                    <input type="text" class="form-control" id="bookAuthor" name="author" required>
                                </div>
                                <div class="mb-3">
                                    <label for="publishedAt" class="form-label">출판일</label>
                                    <input type="date" class="form-control" id="publishedAt" name="publishedAt" required>
                                </div>
                                <div class="mb-3">
                                    <label for="bookPrice" class="form-label">가격</label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" id="bookPrice" name="price" required min="0">
                                        <span class="input-group-text">원</span>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="bookType" class="form-label">종류</label>
                                    <select class="form-select" id="bookType" name="type" required>
                                        <option value="new">새 책</option>
                                        <option value="used">중고</option>
                                        <option value="ebook">전자책</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="bookCategory" class="form-label">카테고리</label>
                                    <select class="form-select" id="bookCategory" name="category" required>
                                        <option value="pick">오늘의 PICK</option>
                                        <option value="current">지금, 이 책</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" id="saveBook">저장</button>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // 전역 변수 선언
        const dropdownBtn = document.querySelector('.dropdown-btn');
        const dropdownContent = document.querySelector('.dropdown-content');
        const logoutBtn = document.querySelector('.logout-btn');

        // 드롭다운 메뉴 초기화
        function initializeDropdown() {
            if (!dropdownBtn || !dropdownContent) return;

            dropdownBtn.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                dropdownContent.classList.toggle('show');
                console.log('Dropdown toggled'); // 디버깅용
            });

            // 드롭다운 외부 클릭 감지
            document.addEventListener('click', function(e) {
                const isClickInside = e.target.closest('.dropdown');
                if (!isClickInside && dropdownContent.classList.contains('show')) {
                    dropdownContent.classList.remove('show');
                    console.log('Dropdown closed'); // 디버깅용
                }
            });
        }

        // 로그아웃 기능 초기화
        function initializeLogout() {
            if (!logoutBtn) return;

            logoutBtn.addEventListener('click', async function(e) {
                e.preventDefault();
                try {
                    const response = await fetch('/admin/api/users/logout', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();
                    if (data.success) {
                        window.location.href = '/';
                    } else {
                        console.error('Logout failed:', data.message);
                        alert(data.message || '로그아웃 중 오류가 발생했습니다.');
                    }
                } catch (error) {
                    console.error('Logout error:', error);
                    alert('로그아웃 중 오류가 발생했습니다.');
                }
            });
        }

        // 이미지 업로드 기능
        function initializeImageUpload() {
            const books = document.querySelectorAll('.book');
            
            books.forEach(book => {
                const imageContainer = book.querySelector('.book-image-container');
                const uploadProgress = book.querySelector('.upload-progress');
                const bookId = book.dataset.id;
                
                if (imageContainer) {
                    const overlay = imageContainer.querySelector('.image-upload-overlay');
                    
                    overlay.addEventListener('click', function(e) {
                        e.stopPropagation();
                        
                        // 파일 입력 엘리먼트 생성
                        const fileInput = document.createElement('input');
                        fileInput.type = 'file';
                        fileInput.accept = 'image/*';
                        
                        fileInput.addEventListener('change', async function() {
                            if (fileInput.files && fileInput.files[0]) {
                                const file = fileInput.files[0];
                                
                                // 파일 크기 체크 (5MB)
                                if (file.size > 5 * 1024 * 1024) {
                                    alert('파일 크기는 5MB를 초과할 수 없습니다.');
                                    return;
                                }
                                
                                // 파일 형식 체크
                                if (!['image/jpeg', 'image/png', 'image/gif'].includes(file.type)) {
                                    alert('지원하지 않는 파일 형식입니다. (jpg, png, gif만 가능)');
                                    return;
                                }
                                
                                // FormData 생성
                                const formData = new FormData();
                                formData.append('image', file);
                                
                                try {
                                    // 업로드 진행 상태 표시
                                    uploadProgress.style.display = 'flex';
                                    
                                    const response = await fetch(`/admin/api/books/${bookId}/image`, {
                                        method: 'POST',
                                        body: formData
                                    });
                                    
                                    const data = await response.json();
                                    
                                    if (data.success) {
                                        // 이미지 업데이트
                                        const bookImage = book.querySelector('.book-image');
                                        if (bookImage) {
                                            bookImage.src = data.imageUrl + '?t=' + new Date().getTime();
                                        } else {
                                            const newImage = document.createElement('img');
                                            newImage.src = data.imageUrl;
                                            newImage.alt = '책 이미지';
                                            newImage.className = 'book-image';
                                            imageContainer.insertBefore(newImage, overlay);
                                        }
                                    } else {
                                        throw new Error(data.message || '이미지 업로드에 실패했습니다.');
                                    }
                                } catch (error) {
                                    console.error('Image upload error:', error);
                                    alert(error.message || '이미지 업로드 중 오류가 발생했습니다.');
                                } finally {
                                    uploadProgress.style.display = 'none';
                                }
                            }
                        });
                        
                        fileInput.click();
                    });
                }
            });
        }

        // 기능 초기화
        initializeDropdown();
        initializeLogout();
        initializeImageUpload();

        const editModalEl = document.getElementById('editModal');
        const addBookModalEl = document.getElementById('addBookModal');
        
        const editModal = new bootstrap.Modal(editModalEl, {
            backdrop: true,
            keyboard: true,
            focus: true
        });
        
        const addBookModal = new bootstrap.Modal(addBookModalEl, {
            backdrop: true,
            keyboard: true,
            focus: true
        });

        // 모달 닫기 이벤트 처리
        document.querySelectorAll('[data-bs-dismiss="modal"]').forEach(button => {
            button.addEventListener('click', function() {
                const modalEl = this.closest('.modal');
                const modalInstance = bootstrap.Modal.getInstance(modalEl);
                if (modalInstance) {
                    modalInstance.hide();
                }
            });
        });

        // ESC 키 이벤트
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const modalEl = document.querySelector('.modal.show');
                if (modalEl) {
                    const modalInstance = bootstrap.Modal.getInstance(modalEl);
                    if (modalInstance) {
                        modalInstance.hide();
                    }
                }
            }
        });

        // 모달 외부 클릭 이벤트
        [editModalEl, addBookModalEl].forEach(modalEl => {
            modalEl.addEventListener('click', function(event) {
                if (event.target === this) {
                    const modalInstance = bootstrap.Modal.getInstance(this);
                    if (modalInstance) {
                        modalInstance.hide();
                    }
                }
            });
        });

        let currentBookId = null;

        // 수정 모달 관련 이벤트
        document.querySelectorAll('.btn-edit').forEach(button => {
            button.addEventListener('click', function() {
                const bookElement = this.closest('.book');
                currentBookId = bookElement.dataset.id;
                
                // 현재 도서 정보를 모달에 채우기
                const title = bookElement.querySelector('.book-title').textContent;
                const author = bookElement.querySelector('.book-author').textContent;
                const price = bookElement.querySelector('.book-price').textContent.replace('원', '');
                
                document.getElementById('editTitle').value = title;
                document.getElementById('editAuthor').value = author;
                document.getElementById('editPrice').value = price;
                
                editModal.show();
            });
        });

        // 수정 폼 제출
        document.getElementById('editSubmit').addEventListener('click', async function() {
            if (!currentBookId) return;

            try {
                const response = await fetch(`/admin/api/books/${currentBookId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        title: document.getElementById('editTitle').value,
                        author: document.getElementById('editAuthor').value,
                        price: document.getElementById('editPrice').value,
                        type: document.getElementById('editType').value,
                        category: document.getElementById('editCategory').value
                    })
                });

                const data = await response.json();
                if (data.success) {
                    editModal.hide();
                    window.location.reload();
                } else {
                    alert(data.message || '수정 중 오류가 발생했습니다.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('서버 오류가 발생했습니다.');
            }
        });

        // 모달이 닫힐 때 폼 초기화
        document.getElementById('editModal').addEventListener('hidden.bs.modal', () => {
            document.getElementById('editForm').reset();
        });

        document.getElementById('addBookModal').addEventListener('hidden.bs.modal', () => {
            document.getElementById('addBookForm').reset();
            document.getElementById('bookImagePreview').src = '/images/placeholder.png';
        });

        // 이미지 미리보기
        document.getElementById('bookImage').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('bookImagePreview').src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        });

        // 저장 버튼 클릭 시 모달 닫기
        document.getElementById('saveBook').addEventListener('click', async function() {
            const addBookForm = document.getElementById('addBookForm');
            if (!addBookForm.checkValidity()) {
                addBookForm.reportValidity();
                return;
            }

            const formData = new FormData(addBookForm);
            
            try {
                const response = await fetch('/admin/api/books', {  // URL 경로 수정
                    method: 'POST',
                    body: formData,
                    // multipart/form-data는 자동으로 설정되므로 Content-Type 헤더를 명시하지 않습니다.
                });

                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        alert('도서가 성공적으로 추가되었습니다.');
                        addBookModal.hide();
                        window.location.reload();
                    } else {
                        throw new Error(data.message || '도서 추가 중 오류가 발생했습니다.');
                    }
                } else {
                    const error = await response.json();
                    throw new Error(error.message || '도서 추가 중 오류가 발생했습니다.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert(error.message || '도서 추가 중 오류가 발생했습니다.');
            }
        });
    });
    </script>
</body>
</html> 